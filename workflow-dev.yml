server:
  port: 8082

spring:
  application:
    name: zh-workflow
  jpa:
    hibernate:
      ddl-auto: update
    database: MYSQL
  datasource:
    name: test
    url: jdbc:mysql://10.30.50.169:3306/zh_workflow?useUnicode=true&characterEncoding=UTF8
    username: zhdbuser
    password: zhdbuser123
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    druid:
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
  redis:
    database: 1
    host: ${REDIS_HOST:10.30.50.169}
    port: ${REDIS_PORT:6379}
    pool:
        max-active: 20
    password: 123456

# 配置swagger
swagger:
    enabled: true
    base-package: com.navinfo.zhonghuan.wf
    title: zh-workflow
    version: 1.0.0.SNAPSHOT
    description: 工作流服务
    contact:
        name: workflow


# 配置用户认证和服务认证信息
auth:
  serviceId: zh-auth
  user:
    token-header: Authorization
    limit-expire: 1440 # 一天过去,单位分钟
  client:
    id: zh-workflow
    secret: 123456
    token-header: client-token

logging:
  level:
    com.navinfo.zhonghuan.wf: debug
#    org.activiti: debug
#    org.framework: debug

eureka:
    instance:
        statusPageUrlPath: /info
        healthCheckUrlPath: /health
        # docker 部署开启,记得将IP修改为部署所在服务器的外网IP
#        prefer-ip-address: true
#        ip-address: 127.0.0.1
    client:
        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启,记得将IP修改为部署所在服务器的外网IP
            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

#请求和响应GZIP压缩支持
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true



ribbon:
  eureka:
    enabled: true
  ReadTimeout: 120000
  ConnectTimeout: 120000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 0
  OkToRetryOnAllOperations: false
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule


hystrix:
  threadpool:
    default:
            coreSize: 1000
            maxQueueSize: 1000
            queueSizeRejectionThreshold: 500
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 50000
